Explicação das correções realizadas:
1. Adicionamos uma verificação para o ponteiro `p` após a chamada de `malloc` para verificar se a alocação de memória foi bem sucedida. Caso contrário, exibimos uma mensagem de erro e encerramos o loop com `break`.
2. Corrigimos o formato de impressão para o endereço de memória alocado, utilizando `%p` e fazendo um cast para `(void*)p`.
3. Adicionamos a chamada `free(p)` antes de encerrar o programa, para liberar a memória alocada e evitar vazamentos de memória.